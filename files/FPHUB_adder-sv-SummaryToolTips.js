NDSummary.OnToolTipsLoaded("File:FPHUB_adder.sv",{6:"<div class=\"NDToolTip TSection LSystemVerilog\"><div class=\"TTSummary\">Floating-point adder for HUB format.</div></div>",7:"<div class=\"NDToolTip TModule LSystemVerilog\"><div id=\"NDPrototype7\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection SystemVerilogStyle\"><div class=\"PParameterCells\" data-WideColumnCount=\"2\" data-NarrowColumnCount=\"1\"><div class=\"PBeforeParameters\" data-WideGridArea=\"1/1/2/2\" data-NarrowGridArea=\"1/1/2/2\" style=\"grid-area:1/1/2/2\"><span class=\"SHKeyword\">module</span> FPHUB_adder #(</div><div class=\"PParameterCells Nested\" data-WideGridArea=\"1/2/2/3\" data-NarrowGridArea=\"2/1/3/2\" style=\"grid-area:1/2/2/3\" data-WideColumnCount=\"7\" data-NarrowColumnCount=\"6\"><div class=\"PDirectionOrParameterKeyword InFirstParameterColumn\" data-WideGridArea=\"1/1/2/2\" data-NarrowGridArea=\"1/1/2/2\" style=\"grid-area:1/1/2/2\"><span class=\"SHKeyword\">parameter</span>&nbsp;</div><div class=\"PType\" data-WideGridArea=\"1/2/2/3\" data-NarrowGridArea=\"1/2/2/3\" style=\"grid-area:1/2/2/3\"><span class=\"SHKeyword\">int</span>&nbsp;</div><div class=\"PName\" data-WideGridArea=\"1/3/2/4\" data-NarrowGridArea=\"1/3/2/4\" style=\"grid-area:1/3/2/4\">M</div><div class=\"PDefaultValueSeparator\" data-WideGridArea=\"1/4/2/5\" data-NarrowGridArea=\"1/4/2/5\" style=\"grid-area:1/4/2/5\">&nbsp=&nbsp;</div><div class=\"PDefaultValue InLastParameterColumn\" data-WideGridArea=\"1/5/2/6\" data-NarrowGridArea=\"1/5/2/6\" style=\"grid-area:1/5/2/6\"><span class=\"SHNumber\">23</span>,</div><div class=\"PDirectionOrParameterKeyword InFirstParameterColumn\" data-WideGridArea=\"2/1/3/2\" data-NarrowGridArea=\"2/1/3/2\" style=\"grid-area:2/1/3/2\"><span class=\"SHKeyword\">parameter</span>&nbsp;</div><div class=\"PType\" data-WideGridArea=\"2/2/3/3\" data-NarrowGridArea=\"2/2/3/3\" style=\"grid-area:2/2/3/3\"><span class=\"SHKeyword\">int</span>&nbsp;</div><div class=\"PName\" data-WideGridArea=\"2/3/3/4\" data-NarrowGridArea=\"2/3/3/4\" style=\"grid-area:2/3/3/4\">E</div><div class=\"PDefaultValueSeparator\" data-WideGridArea=\"2/4/3/5\" data-NarrowGridArea=\"2/4/3/5\" style=\"grid-area:2/4/3/5\">&nbsp=&nbsp;</div><div class=\"PDefaultValue InLastParameterColumn\" data-WideGridArea=\"2/5/3/6\" data-NarrowGridArea=\"2/5/3/6\" style=\"grid-area:2/5/3/6\"><span class=\"SHNumber\">8</span>,</div><div class=\"PDirectionOrParameterKeyword InFirstParameterColumn\" data-WideGridArea=\"3/1/4/2\" data-NarrowGridArea=\"3/1/4/2\" style=\"grid-area:3/1/4/2\"><span class=\"SHKeyword\">parameter</span>&nbsp;</div><div class=\"PType\" data-WideGridArea=\"3/2/4/3\" data-NarrowGridArea=\"3/2/4/3\" style=\"grid-area:3/2/4/3\"><span class=\"SHKeyword\">int</span>&nbsp;</div><div class=\"PName\" data-WideGridArea=\"3/3/4/4\" data-NarrowGridArea=\"3/3/4/4\" style=\"grid-area:3/3/4/4\">special_case</div><div class=\"PDefaultValueSeparator\" data-WideGridArea=\"3/4/4/5\" data-NarrowGridArea=\"3/4/4/5\" style=\"grid-area:3/4/4/5\">&nbsp=&nbsp;</div><div class=\"PDefaultValue InLastParameterColumn\" data-WideGridArea=\"3/5/4/6\" data-NarrowGridArea=\"3/5/4/6\" style=\"grid-area:3/5/4/6\"><span class=\"SHNumber\">7</span>,</div><div class=\"PDirectionOrParameterKeyword InFirstParameterColumn\" data-WideGridArea=\"4/1/5/2\" data-NarrowGridArea=\"4/1/5/2\" style=\"grid-area:4/1/5/2\"><span class=\"SHKeyword\">parameter</span>&nbsp;</div><div class=\"PType\" data-WideGridArea=\"4/2/5/3\" data-NarrowGridArea=\"4/2/5/3\" style=\"grid-area:4/2/5/3\"><span class=\"SHKeyword\">int</span>&nbsp;</div><div class=\"PName\" data-WideGridArea=\"4/3/5/4\" data-NarrowGridArea=\"4/3/5/4\" style=\"grid-area:4/3/5/4\">sign_mantissa_bit</div><div class=\"PDefaultValueSeparator\" data-WideGridArea=\"4/4/5/5\" data-NarrowGridArea=\"4/4/5/5\" style=\"grid-area:4/4/5/5\">&nbsp=&nbsp;</div><div class=\"PDefaultValue InLastParameterColumn\" data-WideGridArea=\"4/5/5/6\" data-NarrowGridArea=\"4/5/5/6\" style=\"grid-area:4/5/5/6\"><span class=\"SHNumber\">1</span>,</div><div class=\"PDirectionOrParameterKeyword InFirstParameterColumn\" data-WideGridArea=\"5/1/6/2\" data-NarrowGridArea=\"5/1/6/2\" style=\"grid-area:5/1/6/2\"><span class=\"SHKeyword\">parameter</span>&nbsp;</div><div class=\"PType\" data-WideGridArea=\"5/2/6/3\" data-NarrowGridArea=\"5/2/6/3\" style=\"grid-area:5/2/6/3\"><span class=\"SHKeyword\">int</span>&nbsp;</div><div class=\"PName\" data-WideGridArea=\"5/3/6/4\" data-NarrowGridArea=\"5/3/6/4\" style=\"grid-area:5/3/6/4\">one_implicit_bit</div><div class=\"PDefaultValueSeparator\" data-WideGridArea=\"5/4/6/5\" data-NarrowGridArea=\"5/4/6/5\" style=\"grid-area:5/4/6/5\">&nbsp=&nbsp;</div><div class=\"PDefaultValue InLastParameterColumn\" data-WideGridArea=\"5/5/6/6\" data-NarrowGridArea=\"5/5/6/6\" style=\"grid-area:5/5/6/6\"><span class=\"SHNumber\">1</span>,</div><div class=\"PDirectionOrParameterKeyword InFirstParameterColumn\" data-WideGridArea=\"6/1/7/2\" data-NarrowGridArea=\"6/1/7/2\" style=\"grid-area:6/1/7/2\"><span class=\"SHKeyword\">parameter</span>&nbsp;</div><div class=\"PType\" data-WideGridArea=\"6/2/7/3\" data-NarrowGridArea=\"6/2/7/3\" style=\"grid-area:6/2/7/3\"><span class=\"SHKeyword\">int</span>&nbsp;</div><div class=\"PName\" data-WideGridArea=\"6/3/7/4\" data-NarrowGridArea=\"6/3/7/4\" style=\"grid-area:6/3/7/4\">ilsb_bit</div><div class=\"PDefaultValueSeparator\" data-WideGridArea=\"6/4/7/5\" data-NarrowGridArea=\"6/4/7/5\" style=\"grid-area:6/4/7/5\">&nbsp=&nbsp;</div><div class=\"PDefaultValue InLastParameterColumn\" data-WideGridArea=\"6/5/7/6\" data-NarrowGridArea=\"6/5/7/6\" style=\"grid-area:6/5/7/6\"><span class=\"SHNumber\">1</span>,</div><div class=\"PDirectionOrParameterKeyword InFirstParameterColumn\" data-WideGridArea=\"7/1/8/2\" data-NarrowGridArea=\"7/1/8/2\" style=\"grid-area:7/1/8/2\"><span class=\"SHKeyword\">parameter</span>&nbsp;</div><div class=\"PType\" data-WideGridArea=\"7/2/8/3\" data-NarrowGridArea=\"7/2/8/3\" style=\"grid-area:7/2/8/3\"><span class=\"SHKeyword\">int</span>&nbsp;</div><div class=\"PName\" data-WideGridArea=\"7/3/8/4\" data-NarrowGridArea=\"7/3/8/4\" style=\"grid-area:7/3/8/4\">extra_bits_mantissa</div><div class=\"PDefaultValueSeparator\" data-WideGridArea=\"7/4/8/5\" data-NarrowGridArea=\"7/4/8/5\" style=\"grid-area:7/4/8/5\">&nbsp=&nbsp;</div><div class=\"PDefaultValue InLastParameterColumn\" data-WideGridArea=\"7/5/8/6\" data-NarrowGridArea=\"7/5/8/6\" style=\"grid-area:7/5/8/6\"><span class=\"SHNumber\">1</span> + sign_mantissa_bit + one_implicit_bit + ilsb_bit</div><div class=\"PAfterParameters\" data-WideGridArea=\"7/6/8/7\" data-NarrowGridArea=\"8/1/9/7\" style=\"grid-area:7/6/8/7\">)</div></div><div class=\"PBeforeParameters RightAlignOnWide FitIntoLeftIndentOnNarrow RightAlignOnNarrow\" data-WideGridArea=\"2/1/3/2\" data-NarrowGridArea=\"3/1/4/2\" style=\"grid-area:2/1/3/2\">(</div><div class=\"PParameterCells Nested\" data-WideGridArea=\"2/2/3/3\" data-NarrowGridArea=\"3/1/4/2\" style=\"grid-area:2/2/3/3\" data-WideColumnCount=\"6\" data-NarrowColumnCount=\"5\"><div class=\"PDirectionOrParameterKeyword InFirstParameterColumn\" data-WideGridArea=\"1/1/2/2\" data-NarrowGridArea=\"1/1/2/2\" style=\"grid-area:1/1/2/2\"><span class=\"SHKeyword\">input</span>&nbsp;</div><div class=\"PType\" data-WideGridArea=\"1/2/2/3\" data-NarrowGridArea=\"1/2/2/3\" style=\"grid-area:1/2/2/3\"><span class=\"SHKeyword\">logic</span></div><div class=\"PName InLastParameterColumn\" data-WideGridArea=\"1/4/2/5\" data-NarrowGridArea=\"1/4/2/5\" style=\"grid-area:1/4/2/5\">start,</div><div class=\"PDirectionOrParameterKeyword InFirstParameterColumn\" data-WideGridArea=\"2/1/3/2\" data-NarrowGridArea=\"2/1/3/2\" style=\"grid-area:2/1/3/2\"><span class=\"SHKeyword\">input</span>&nbsp;</div><div class=\"PType\" data-WideGridArea=\"2/2/3/3\" data-NarrowGridArea=\"2/2/3/3\" style=\"grid-area:2/2/3/3\"><span class=\"SHKeyword\">logic signed</span></div><div class=\"PPackedDimensions\" data-WideGridArea=\"2/3/3/4\" data-NarrowGridArea=\"2/3/3/4\" style=\"grid-area:2/3/3/4\">&nbsp[E+M:<span class=\"SHNumber\">0</span>]&nbsp;</div><div class=\"PName InLastParameterColumn\" data-WideGridArea=\"2/4/3/5\" data-NarrowGridArea=\"2/4/3/5\" style=\"grid-area:2/4/3/5\">X,</div><div class=\"PDirectionOrParameterKeyword InFirstParameterColumn\" data-WideGridArea=\"3/1/4/2\" data-NarrowGridArea=\"3/1/4/2\" style=\"grid-area:3/1/4/2\"><span class=\"SHKeyword\">input</span>&nbsp;</div><div class=\"PType\" data-WideGridArea=\"3/2/4/3\" data-NarrowGridArea=\"3/2/4/3\" style=\"grid-area:3/2/4/3\"><span class=\"SHKeyword\">logic signed</span></div><div class=\"PPackedDimensions\" data-WideGridArea=\"3/3/4/4\" data-NarrowGridArea=\"3/3/4/4\" style=\"grid-area:3/3/4/4\">&nbsp[E+M:<span class=\"SHNumber\">0</span>]&nbsp;</div><div class=\"PName InLastParameterColumn\" data-WideGridArea=\"3/4/4/5\" data-NarrowGridArea=\"3/4/4/5\" style=\"grid-area:3/4/4/5\">Y,</div><div class=\"PDirectionOrParameterKeyword InFirstParameterColumn\" data-WideGridArea=\"4/1/5/2\" data-NarrowGridArea=\"4/1/5/2\" style=\"grid-area:4/1/5/2\"><span class=\"SHKeyword\">output</span>&nbsp;</div><div class=\"PType\" data-WideGridArea=\"4/2/5/3\" data-NarrowGridArea=\"4/2/5/3\" style=\"grid-area:4/2/5/3\"><span class=\"SHKeyword\">logic</span></div><div class=\"PName InLastParameterColumn\" data-WideGridArea=\"4/4/5/5\" data-NarrowGridArea=\"4/4/5/5\" style=\"grid-area:4/4/5/5\">finish,</div><div class=\"PDirectionOrParameterKeyword InFirstParameterColumn\" data-WideGridArea=\"5/1/6/2\" data-NarrowGridArea=\"5/1/6/2\" style=\"grid-area:5/1/6/2\"><span class=\"SHKeyword\">output</span>&nbsp;</div><div class=\"PType\" data-WideGridArea=\"5/2/6/3\" data-NarrowGridArea=\"5/2/6/3\" style=\"grid-area:5/2/6/3\"><span class=\"SHKeyword\">logic</span></div><div class=\"PPackedDimensions\" data-WideGridArea=\"5/3/6/4\" data-NarrowGridArea=\"5/3/6/4\" style=\"grid-area:5/3/6/4\">&nbsp[E+M:<span class=\"SHNumber\">0</span>]&nbsp;</div><div class=\"PName InLastParameterColumn\" data-WideGridArea=\"5/4/6/5\" data-NarrowGridArea=\"5/4/6/5\" style=\"grid-area:5/4/6/5\">Z</div><div class=\"PAfterParameters NegativeLeftSpaceOnWide\" data-WideGridArea=\"5/5/6/6\" data-NarrowGridArea=\"6/1/7/6\" style=\"grid-area:5/5/6/6\">)</div></div></div></div></div><div class=\"TTSummary\">Implements a floating-point adder for HUB format, supporting addition and subtraction of two operands.</div></div>",8:"<div class=\"NDToolTip TSection LSystemVerilog\"><div class=\"TTSummary\">This section allows specifying test values for X and Y to facilitate debugging through simulation logs.&nbsp; By assigning specific values to X_prueba and Y_prueba, the module can identify these inputs during simulation.&nbsp; When the specified values match the inputs X and Y, detailed logs are generated to trace the internal operations.&nbsp; This mechanism is useful for verifying the behavior of the floating-point adder under controlled test cases.</div></div>",10:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype10\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">logic</span> [E+M:<span class=\"SHNumber\">0</span>] X_prueba</div></div><div class=\"TTSummary\">Test value for X to trigger debug logs.</div></div>",11:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype11\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">logic</span> [E+M:<span class=\"SHNumber\">0</span>] Y_prueba</div></div><div class=\"TTSummary\">Test value for Y to trigger debug logs.</div></div>",12:"<div class=\"NDToolTip TSection LSystemVerilog\"><div class=\"TTSummary\">Detects if either operand is a special floating-point value (e.g., ±0, ±1, ±inf).&nbsp; A special case detector module identifies the category for each operand.&nbsp; If a special case is detected, a dedicated result is computed using a separate module.&nbsp; This mechanism ensures correct handling of exceptions before further computation.</div></div>",14:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype14\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">logic</span> [M+E:<span class=\"SHNumber\">0</span>] special_result</div></div><div class=\"TTSummary\">Stores the result of the operation when a special case is detected.</div></div>",15:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype15\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><div class=\"PParameterCells\" data-WideColumnCount=\"3\" data-NarrowColumnCount=\"2\"><div class=\"PBeforeParameters\" data-WideGridArea=\"1/1/2/2\" data-NarrowGridArea=\"1/1/2/3\" style=\"grid-area:1/1/2/2\"><span class=\"SHKeyword\">logic</span> [$clog2(</div><div class=\"PName InFirstParameterColumn InLastParameterColumn\" data-WideGridArea=\"1/2/2/3\" data-NarrowGridArea=\"2/1/3/2\" style=\"grid-area:1/2/2/3\">special_case</div><div class=\"PAfterParameters\" data-WideGridArea=\"1/3/2/4\" data-NarrowGridArea=\"3/1/4/3\" style=\"grid-area:1/3/2/4\">)<span class=\"SHNumber\">-1</span>:<span class=\"SHNumber\">0</span>] X_special_case</div></div></div></div><div class=\"TTSummary\">Encodes the type of special case for operand X.</div></div>",16:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype16\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><div class=\"PParameterCells\" data-WideColumnCount=\"3\" data-NarrowColumnCount=\"2\"><div class=\"PBeforeParameters\" data-WideGridArea=\"1/1/2/2\" data-NarrowGridArea=\"1/1/2/3\" style=\"grid-area:1/1/2/2\"><span class=\"SHKeyword\">logic</span> [$clog2(</div><div class=\"PName InFirstParameterColumn InLastParameterColumn\" data-WideGridArea=\"1/2/2/3\" data-NarrowGridArea=\"2/1/3/2\" style=\"grid-area:1/2/2/3\">special_case</div><div class=\"PAfterParameters\" data-WideGridArea=\"1/3/2/4\" data-NarrowGridArea=\"3/1/4/3\" style=\"grid-area:1/3/2/4\">)<span class=\"SHNumber\">-1</span>:<span class=\"SHNumber\">0</span>] Y_special_case</div></div></div></div><div class=\"TTSummary\">Encodes the type of special case for operand Y.</div></div>",17:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype17\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">logic</span> special_case_detected</div></div><div class=\"TTSummary\">Flag indicating whether a special case has been detected.</div></div>",18:"<div class=\"NDToolTip TSection LSystemVerilog\"><div class=\"TTSummary\">This section calculates the signed difference between the exponents of operands X and Y.&nbsp; It also determines whether X has a greater exponent than Y, or if both are equal.&nbsp; These signals are critical for preparing mantissas prior to alignment and arithmetic.</div></div>",20:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype20\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">logic signed</span> [E:<span class=\"SHNumber\">0</span>] diff</div></div><div class=\"TTSummary\">Signed difference between the exponents of X and Y.&nbsp; Used to determine how much the mantissas must be shifted.</div></div>",21:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype21\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">logic</span> [E:<span class=\"SHNumber\">0</span>] diff_abs</div></div><div class=\"TTSummary\">Absolute value of the exponent difference.&nbsp; Useful for determining shift amounts regardless of sign.</div></div>",22:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype22\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">logic</span> X_greater_than_Y</div></div><div class=\"TTSummary\">Flag indicating whether the exponent of X is greater than that of Y.&nbsp; Used to determine which mantissa is considered the major operand.</div></div>",23:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype23\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">logic</span> Ex_equal_Ey</div></div><div class=\"TTSummary\">Flag indicating whether the exponents of X and Y are equal.&nbsp; Allows short-circuiting alignment logic when no shift is needed.</div></div>",24:"<div class=\"NDToolTip TSection LSystemVerilog\"><div class=\"TTSummary\">This section aligns the minor mantissa (the one corresponding to the operand with the smaller exponent) so that it can be correctly combined with the major mantissa in subsequent arithmetic.</div></div>",26:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype26\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">logic</span> [M+extra_bits_mantissa-<span class=\"SHNumber\">1</span>:<span class=\"SHNumber\">0</span>] M_minor_aligned</div></div><div class=\"TTSummary\">Aligned version of the minor mantissa, shifted to match the exponent of the major operand.&nbsp; This is the result of applying a right arithmetic shift to the unaligned minor mantissa.</div></div>",27:"<div class=\"NDToolTip TSection LSystemVerilog\"><div class=\"TTSummary\">This section holds the result of the arithmetic operation between the aligned mantissas (either an addition or subtraction, depending on operand signs).</div></div>",29:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype29\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">logic signed</span> [M+extra_bits_mantissa-<span class=\"SHNumber\">1</span>:<span class=\"SHNumber\">0</span>] M_result</div></div><div class=\"TTSummary\">Raw result of the addition or subtraction between the aligned mantissas.</div></div>",30:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype30\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">logic signed</span> [M+extra_bits_mantissa-<span class=\"SHNumber\">1</span>:<span class=\"SHNumber\">0</span>] M_result_ready</div></div><div class=\"TTSummary\">Result of mantissa operation, possibly passed through logic for post-processing.&nbsp; Ready to be normalized.</div></div>",31:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype31\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">logic signed</span> [M+extra_bits_mantissa-<span class=\"SHNumber\">1</span>:<span class=\"SHNumber\">0</span>] M_normalize</div></div><div class=\"TTSummary\">Mantissa value after normalization by left shifting to remove leading zeros.</div></div>",32:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype32\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">logic</span> [E+M:<span class=\"SHNumber\">0</span>] result</div></div><div class=\"TTSummary\">Final floating-point result before assignment to output.</div></div>",33:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype33\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><div class=\"PParameterCells\" data-WideColumnCount=\"6\" data-NarrowColumnCount=\"5\"><div class=\"PBeforeParameters\" data-WideGridArea=\"1/1/2/2\" data-NarrowGridArea=\"1/1/2/6\" style=\"grid-area:1/1/2/2\"><span class=\"SHKeyword\">logic</span> [$clog2(</div><div class=\"PModifierQualifier InFirstParameterColumn\" data-WideGridArea=\"1/2/2/3\" data-NarrowGridArea=\"2/1/3/2\" style=\"grid-area:1/2/2/3\">M+extra_bits_mantissa-</div><div class=\"PType\" data-WideGridArea=\"1/3/2/4\" data-NarrowGridArea=\"2/2/3/3\" style=\"grid-area:1/3/2/4\">sign_mantissa_bit</div><div class=\"PSymbols\" data-WideGridArea=\"1/4/2/5\" data-NarrowGridArea=\"2/3/3/4\" style=\"grid-area:1/4/2/5\">-</div><div class=\"PName InLastParameterColumn\" data-WideGridArea=\"1/5/2/6\" data-NarrowGridArea=\"2/4/3/5\" style=\"grid-area:1/5/2/6\"><span class=\"SHNumber\">1</span></div><div class=\"PAfterParameters\" data-WideGridArea=\"1/6/2/7\" data-NarrowGridArea=\"3/1/4/6\" style=\"grid-area:1/6/2/7\">):<span class=\"SHNumber\">0</span>] shift_LZA</div></div></div></div><div class=\"TTSummary\">Amount of leading zeros detected by the LZD module, used to normalize the result.</div></div>",34:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype34\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">logic</span> [E:<span class=\"SHNumber\">0</span>] Ez_normalized</div></div><div class=\"TTSummary\">Final exponent after subtracting the number of leading zeros from the original exponent.</div></div>",35:"<div class=\"NDToolTip TSection LSystemVerilog\"><div class=\"TTSummary\">This section uses the external module LZD (Leading Zero Detector) to count how many leading zeros are present in the result of the mantissa operation.</div></div>",36:"<div class=\"NDToolTip TSection LSystemVerilog\"><div class=\"TTSummary\">Determines the sign of the result and the effective operation (addition or subtraction), based on the sign bits and exponent comparison of the operands.</div></div>",38:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype38\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><div class=\"PParameterCells\" data-WideColumnCount=\"3\" data-NarrowColumnCount=\"2\"><div class=\"PBeforeParameters\" data-WideGridArea=\"1/1/2/2\" data-NarrowGridArea=\"1/1/2/3\" style=\"grid-area:1/1/2/2\">Sz = (</div><div class=\"PName InFirstParameterColumn InLastParameterColumn\" data-WideGridArea=\"1/2/2/3\" data-NarrowGridArea=\"2/1/3/2\" style=\"grid-area:1/2/2/3\">X_greater_than_Y</div><div class=\"PAfterParameters\" data-WideGridArea=\"1/3/2/4\" data-NarrowGridArea=\"3/1/4/3\" style=\"grid-area:1/3/2/4\">) ? X[E+M] : Y[E+M]</div></div></div></div><div class=\"TTSummary\">Sign of the result. It is taken from the operand with the greater exponent.</div></div>",39:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype39\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">subtraction = X[E+M] ^ Y[E+M]</div></div><div class=\"TTSummary\">Flag indicating whether the effective operation is a subtraction.&nbsp; Determined by XOR-ing the sign bits of the inputs.</div></div>",40:"<div class=\"NDToolTip TSection LSystemVerilog\"><div class=\"TTSummary\">Defines the value of the Implicit Least Significant Bit (ILSB) based on special cases.&nbsp; For operands that represent ±1, the ILSB is set to 0 to represent their special encoding.</div></div>",42:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype42\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><div class=\"PParameterCells\" data-WideColumnCount=\"5\" data-NarrowColumnCount=\"4\"><div class=\"PBeforeParameters\" data-WideGridArea=\"1/1/2/2\" data-NarrowGridArea=\"1/1/2/5\" style=\"grid-area:1/1/2/2\">ilsb_x = (</div><div class=\"PName InFirstParameterColumn\" data-WideGridArea=\"1/2/2/3\" data-NarrowGridArea=\"2/1/3/2\" style=\"grid-area:1/2/2/3\">X_special_case</div><div class=\"PDefaultValueSeparator\" data-WideGridArea=\"1/3/2/4\" data-NarrowGridArea=\"2/2/3/3\" style=\"grid-area:1/3/2/4\">&nbsp=&nbsp;</div><div class=\"PDefaultValue InLastParameterColumn\" data-WideGridArea=\"1/4/2/5\" data-NarrowGridArea=\"2/3/3/4\" style=\"grid-area:1/4/2/5\">= <span class=\"SHNumber\">5</span> || X_special_case == <span class=\"SHNumber\">6</span></div><div class=\"PAfterParameters\" data-WideGridArea=\"1/5/2/6\" data-NarrowGridArea=\"3/1/4/5\" style=\"grid-area:1/5/2/6\">) ? <span class=\"SHNumber\">1\'b0</span> : <span class=\"SHNumber\">1\'b1</span></div></div></div></div><div class=\"TTSummary\">ILSB value for operand X. Set to 0 if X is +1 or -1, otherwise 1.</div></div>",43:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype43\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><div class=\"PParameterCells\" data-WideColumnCount=\"5\" data-NarrowColumnCount=\"4\"><div class=\"PBeforeParameters\" data-WideGridArea=\"1/1/2/2\" data-NarrowGridArea=\"1/1/2/5\" style=\"grid-area:1/1/2/2\">ilsb_y = (</div><div class=\"PName InFirstParameterColumn\" data-WideGridArea=\"1/2/2/3\" data-NarrowGridArea=\"2/1/3/2\" style=\"grid-area:1/2/2/3\">Y_special_case</div><div class=\"PDefaultValueSeparator\" data-WideGridArea=\"1/3/2/4\" data-NarrowGridArea=\"2/2/3/3\" style=\"grid-area:1/3/2/4\">&nbsp=&nbsp;</div><div class=\"PDefaultValue InLastParameterColumn\" data-WideGridArea=\"1/4/2/5\" data-NarrowGridArea=\"2/3/3/4\" style=\"grid-area:1/4/2/5\">= <span class=\"SHNumber\">5</span> || Y_special_case == <span class=\"SHNumber\">6</span></div><div class=\"PAfterParameters\" data-WideGridArea=\"1/5/2/6\" data-NarrowGridArea=\"3/1/4/5\" style=\"grid-area:1/5/2/6\">) ? <span class=\"SHNumber\">1\'b0</span> : <span class=\"SHNumber\">1\'b1</span></div></div></div></div><div class=\"TTSummary\">ILSB value for operand Y. Set to 0 if Y is +1 or -1, otherwise 1.</div></div>",44:"<div class=\"NDToolTip TSection LSystemVerilog\"><div class=\"TTSummary\">Builds the major and minor mantissas by extending them with:</div></div>",46:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype46\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><div class=\"PParameterCells\" data-WideColumnCount=\"3\" data-NarrowColumnCount=\"2\"><div class=\"PBeforeParameters\" data-WideGridArea=\"1/1/2/2\" data-NarrowGridArea=\"1/1/2/3\" style=\"grid-area:1/1/2/2\">M_major = (</div><div class=\"PName InFirstParameterColumn InLastParameterColumn\" data-WideGridArea=\"1/2/2/3\" data-NarrowGridArea=\"2/1/3/2\" style=\"grid-area:1/2/2/3\">X_greater_than_Y</div><div class=\"PAfterParameters\" data-WideGridArea=\"1/3/2/4\" data-NarrowGridArea=\"3/1/4/3\" style=\"grid-area:1/3/2/4\">) ? { {sign_mantissa_bit{<span class=\"SHNumber\">1\'b0</span>}}, {one_implicit_bit{<span class=\"SHNumber\">1\'b1</span>}}, X[M-<span class=\"SHNumber\">1</span>:<span class=\"SHNumber\">0</span>], ilsb_x, {(extra_bits_mantissa - (sign_mantissa_bit+one_implicit_bit+ilsb_bit)){<span class=\"SHNumber\">1\'b0</span>} } } : { {sign_mantissa_bit{<span class=\"SHNumber\">1\'b0</span>}}, {one_implicit_bit{<span class=\"SHNumber\">1\'b1</span>}}, Y[M-<span class=\"SHNumber\">1</span>:<span class=\"SHNumber\">0</span>], ilsb_y, {(extra_bits_mantissa - (sign_mantissa_bit+one_implicit_bit+ilsb_bit)){<span class=\"SHNumber\">1\'b0</span>} } }</div></div></div></div><div class=\"TTSummary\">Fully constructed mantissa of the operand with the greater exponent.&nbsp; This will not be shifted and directly participates in the addition.</div></div>",47:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype47\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><div class=\"PParameterCells\" data-WideColumnCount=\"3\" data-NarrowColumnCount=\"2\"><div class=\"PBeforeParameters\" data-WideGridArea=\"1/1/2/2\" data-NarrowGridArea=\"1/1/2/3\" style=\"grid-area:1/1/2/2\">M_minor = (</div><div class=\"PName InFirstParameterColumn InLastParameterColumn\" data-WideGridArea=\"1/2/2/3\" data-NarrowGridArea=\"2/1/3/2\" style=\"grid-area:1/2/2/3\">X_greater_than_Y</div><div class=\"PAfterParameters\" data-WideGridArea=\"1/3/2/4\" data-NarrowGridArea=\"3/1/4/3\" style=\"grid-area:1/3/2/4\">) ? { {sign_mantissa_bit{<span class=\"SHNumber\">1\'b0</span>}}, {one_implicit_bit{<span class=\"SHNumber\">1\'b1</span>}}, Y[M-<span class=\"SHNumber\">1</span>:<span class=\"SHNumber\">0</span>], ilsb_y, {(extra_bits_mantissa - (sign_mantissa_bit+one_implicit_bit+ilsb_bit)){<span class=\"SHNumber\">1\'b0</span>} } } : { {sign_mantissa_bit{<span class=\"SHNumber\">1\'b0</span>}}, {one_implicit_bit{<span class=\"SHNumber\">1\'b1</span>}}, X[M-<span class=\"SHNumber\">1</span>:<span class=\"SHNumber\">0</span>], ilsb_x, {(extra_bits_mantissa - (sign_mantissa_bit+one_implicit_bit+ilsb_bit)){<span class=\"SHNumber\">1\'b0</span>} } }</div></div></div></div><div class=\"TTSummary\">Fully constructed mantissa of the operand with the smaller exponent.&nbsp; This will be aligned (shifted) before being added or subtracted.</div></div>",48:"<div class=\"NDToolTip TSection LSystemVerilog\"><div class=\"TTSummary\">Selects the exponent of the operand with the larger value as the initial exponent output.&nbsp; Also detects whether any operand represents a special case such as ±0 or ±infinity.</div></div>",50:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype50\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><div class=\"PParameterCells\" data-WideColumnCount=\"3\" data-NarrowColumnCount=\"2\"><div class=\"PBeforeParameters\" data-WideGridArea=\"1/1/2/2\" data-NarrowGridArea=\"1/1/2/3\" style=\"grid-area:1/1/2/2\">Ez = (</div><div class=\"PName InFirstParameterColumn InLastParameterColumn\" data-WideGridArea=\"1/2/2/3\" data-NarrowGridArea=\"2/1/3/2\" style=\"grid-area:1/2/2/3\">X_greater_than_Y</div><div class=\"PAfterParameters\" data-WideGridArea=\"1/3/2/4\" data-NarrowGridArea=\"3/1/4/3\" style=\"grid-area:1/3/2/4\">) ? X[E+M-<span class=\"SHNumber\">1</span>:M] : Y[E+M-<span class=\"SHNumber\">1</span>:M]</div></div></div></div><div class=\"TTSummary\">Output exponent before normalization. It is taken from the operand with the greater exponent.</div></div>",51:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div class=\"TTSummary\">Flag set to 1 when either operand corresponds to a special value: specifically, positive/negative zero or positive/negative infinity.&nbsp; This disables the normal arithmetic path and triggers special result handling.</div></div>",52:"<div class=\"NDToolTip TSection LSystemVerilog\"><div class=\"TTSummary\">Computes the absolute value of the signed difference between the exponents.&nbsp; This is used to determine the amount of shift needed to align the mantissas.</div></div>",54:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype54\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><div class=\"PParameterCells\" data-WideColumnCount=\"4\" data-NarrowColumnCount=\"3\"><div class=\"PBeforeParameters\" data-WideGridArea=\"1/1/2/2\" data-NarrowGridArea=\"1/1/2/4\" style=\"grid-area:1/1/2/2\">diff_abs = (</div><div class=\"PType InFirstParameterColumn\" data-WideGridArea=\"1/2/2/3\" data-NarrowGridArea=\"2/1/3/2\" style=\"grid-area:1/2/2/3\">diff &lt;&nbsp;</div><div class=\"PName InLastParameterColumn\" data-WideGridArea=\"1/3/2/4\" data-NarrowGridArea=\"2/2/3/3\" style=\"grid-area:1/3/2/4\"><span class=\"SHNumber\">0</span>) ? -diff : diff</div></div></div></div><div class=\"TTSummary\">Absolute value of the exponent difference <b>diff</b>.&nbsp; Required for proper alignment of the minor mantissa.</div></div>",55:"<div class=\"NDToolTip TSection LSystemVerilog\"><div class=\"TTSummary\">If subtraction is needed, the minor mantissa is inverted and prepared for two\'s complement adjustment. This step ensures correct subtraction handling based on the known fixed position of the ILSB.</div></div>",57:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype57\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><div class=\"PParameterCells\" data-WideColumnCount=\"3\" data-NarrowColumnCount=\"2\"><div class=\"PBeforeParameters\" data-WideGridArea=\"1/1/2/2\" data-NarrowGridArea=\"1/1/2/3\" style=\"grid-area:1/1/2/2\">if (</div><div class=\"PName InFirstParameterColumn InLastParameterColumn\" data-WideGridArea=\"1/2/2/3\" data-NarrowGridArea=\"2/1/3/2\" style=\"grid-area:1/2/2/3\">subtraction</div><div class=\"PAfterParameters\" data-WideGridArea=\"1/3/2/4\" data-NarrowGridArea=\"3/1/4/3\" style=\"grid-area:1/3/2/4\">) <span class=\"SHKeyword\">begin if</span> (M_minor[<span class=\"SHNumber\">1</span>] == <span class=\"SHNumber\">1</span>) <span class=\"SHKeyword\">begin</span> M_minor_ready = {~M_minor[M+extra_bits_mantissa-<span class=\"SHNumber\">1</span>:<span class=\"SHNumber\">2</span>], M_minor[<span class=\"SHNumber\">1</span>:<span class=\"SHNumber\">0</span>]}</div></div></div></div><div class=\"TTSummary\">Adjusted minor mantissa to be used in the arithmetic operation.&nbsp; If subtraction is active, its bits are conditionally inverted to prepare for two\'s complement computation.</div></div>",58:"<div class=\"NDToolTip TSection LSystemVerilog\"><div class=\"TTSummary\">Performs the addition between the major and (aligned) minor mantissas.&nbsp; This is the core arithmetic operation of the adder module.</div></div>",60:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype60\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">M_result = M_major + M_minor_aligned</div></div><div class=\"TTSummary\">Raw result of the mantissa addition.&nbsp; May require sign correction and normalization depending on the outcome.</div></div>",61:"<div class=\"NDToolTip TSection LSystemVerilog\"><div class=\"TTSummary\">If the result is negative (i.e., MSB is 1) and subtraction was performed, the result is converted to its two\'s complement form and the result sign is flipped.</div></div>",63:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype63\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><div class=\"PParameterCells\" data-WideColumnCount=\"4\" data-NarrowColumnCount=\"3\"><div class=\"PBeforeParameters\" data-WideGridArea=\"1/1/2/2\" data-NarrowGridArea=\"1/1/2/4\" style=\"grid-area:1/1/2/2\">if (</div><div class=\"PModifierQualifier InFirstParameterColumn\" data-WideGridArea=\"1/2/2/3\" data-NarrowGridArea=\"2/1/3/2\" style=\"grid-area:1/2/2/3\">(M_result[M+extra_bits_mantissa-<span class=\"SHNumber\">1</span>] == <span class=\"SHNumber\">1\'b1</span>) &amp;&amp;&nbsp;</div><div class=\"PName InLastParameterColumn\" data-WideGridArea=\"1/3/2/4\" data-NarrowGridArea=\"2/2/3/3\" style=\"grid-area:1/3/2/4\">subtraction</div><div class=\"PAfterParameters\" data-WideGridArea=\"1/4/2/5\" data-NarrowGridArea=\"3/1/4/4\" style=\"grid-area:1/4/2/5\">) <span class=\"SHKeyword\">begin</span> M_result_ready = ~M_result + <span class=\"SHNumber\">1</span></div></div></div></div><div class=\"TTSummary\">Final version of the mantissa result after correcting the sign if necessary.</div></div>",64:"<div class=\"NDToolTip TSection LSystemVerilog\"><div class=\"TTSummary\">This section handles the normalization of the mantissa after the addition or subtraction operation.</div></div>",65:"<div class=\"NDToolTip TSection LSystemVerilog\"><div class=\"TTSummary\">Assembles the final floating-point result in custom HUB format by concatenating:</div></div>",67:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype67\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><div class=\"PParameterCells\" data-WideColumnCount=\"3\" data-NarrowColumnCount=\"2\"><div class=\"PBeforeParameters RightSpaceOnWide\" data-WideGridArea=\"1/1/4/2\" data-NarrowGridArea=\"1/1/2/3\" style=\"grid-area:1/1/4/2\">result = {</div><div class=\"PName InFirstParameterColumn InLastParameterColumn\" data-WideGridArea=\"1/2/2/3\" data-NarrowGridArea=\"2/1/3/2\" style=\"grid-area:1/2/2/3\">Sz,</div><div class=\"PName InFirstParameterColumn InLastParameterColumn\" data-WideGridArea=\"2/2/3/3\" data-NarrowGridArea=\"3/1/4/2\" style=\"grid-area:2/2/3/3\">Ez_normalized[E-<span class=\"SHNumber\">1</span>:<span class=\"SHNumber\">0</span>],</div><div class=\"PName InFirstParameterColumn InLastParameterColumn\" data-WideGridArea=\"3/2/4/3\" data-NarrowGridArea=\"4/1/5/2\" style=\"grid-area:3/2/4/3\">M_normalize[M+extra_bits_mantissa-<span class=\"SHNumber\">3</span> : extra_bits_mantissa-<span class=\"SHNumber\">2</span>]</div><div class=\"PAfterParameters LeftSpaceOnWide\" data-WideGridArea=\"3/3/4/4\" data-NarrowGridArea=\"5/1/6/3\" style=\"grid-area:3/3/4/4\">}</div></div></div></div><div class=\"TTSummary\">Final output in custom HUB format, combining sign, exponent, and normalized mantissa.</div></div>",68:"<div class=\"NDToolTip TSection LSystemVerilog\"><div class=\"TTSummary\">Determines the final result to output and signals the completion of the operation.</div></div>",70:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype70\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><div class=\"PParameterCells\" data-WideColumnCount=\"3\" data-NarrowColumnCount=\"2\"><div class=\"PBeforeParameters\" data-WideGridArea=\"1/1/2/2\" data-NarrowGridArea=\"1/1/2/3\" style=\"grid-area:1/1/2/2\"><span class=\"SHKeyword\">assign</span> Z = (</div><div class=\"PName InFirstParameterColumn InLastParameterColumn\" data-WideGridArea=\"1/2/2/3\" data-NarrowGridArea=\"2/1/3/2\" style=\"grid-area:1/2/2/3\">special_case_detected</div><div class=\"PAfterParameters\" data-WideGridArea=\"1/3/2/4\" data-NarrowGridArea=\"3/1/4/3\" style=\"grid-area:1/3/2/4\">) ? special_result : result</div></div></div></div><div class=\"TTSummary\">Final output of the module. Chooses between a special result or the normal computed result.</div></div>",71:"<div class=\"NDToolTip TVariable LSystemVerilog\"><div id=\"NDPrototype71\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">assign</span> finish = <span class=\"SHNumber\">1\'b1</span></div></div><div class=\"TTSummary\">Control signal set to 1 when the operation is complete.</div></div>"});